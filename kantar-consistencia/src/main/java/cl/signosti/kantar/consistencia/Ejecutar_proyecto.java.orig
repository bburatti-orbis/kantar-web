<<<<<<< HEAD
package cl.signosti.kantar.consistencia;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.log4j.Logger;

import com.sun.jersey.api.view.Viewable;

import cl.signosti.kantar.consistencia.dao.locator.LocatorDao;
import cl.signosti.kantar.consistencia.modelo.Estado;
import cl.signosti.kantar.consistencia.modelo.Paisesm;
import cl.signosti.kantar.consistencia.modelo.ProyectoEjecucion;
import cl.signosti.kantar.consistencia.modelo.Proyectom;
import cl.signosti.kantar.consistencia.modelo.Tareasm;
import cl.signosti.kantar.consistencia.modelo.Usuariom;

@Path("/Ejecutar_proyecto")
public class Ejecutar_proyecto {
	
	private static final Logger log = Logger.getLogger(Ejecutar_proyecto.class);
	
	@GET
	@Produces({ MediaType.TEXT_HTML })
	public Response getgest_proyec(@Context HttpServletRequest req) {

		HttpSession session = req.getSession(true);

		Map<String, Object> map = new HashMap<String, Object>();

		Object user = session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);

			return Response.ok(new Viewable("/views/index", map)).build();

		} else {	

			return Response.ok(new Viewable("/views/act_tarea")).build();
		}

	}
	@POST
	@Path("/asig_resp")
	@Produces({ MediaType.TEXT_HTML })
	public Response getasignarresponable(@Context HttpServletRequest req, @FormParam(value = "idTarea") String idTarea) {
		HttpSession session = req.getSession(true);
		Map<String, Object> map = new HashMap<String, Object>();
		Usuariom user = (Usuariom)session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);
			return Response.ok(new Viewable("/views/index", map)).build();
		} else {
			try{
				req.setAttribute("idTarea", idTarea);
				this.cargarDatosTarea(session, idTarea, req);
				req.setAttribute("usuario", user);
			}catch(Exception e){
				e.printStackTrace();
				log.error("Error al cargar tarea para asginar responsable", e);
			}
			return Response.ok(new Viewable("/views/asignar_responsable")).build();
		}
	}
	
	private void cargarDatosTarea(HttpSession session, String idTarea, HttpServletRequest req) throws SQLException{
		log.debug("idTarea : " + idTarea);
		System.out.println("idTarea : " + idTarea);
		session.removeAttribute("tarea");
		//String idTarea = req.getParameter("idTarea");
		int id = Integer.parseInt(idTarea);
		Tareasm tarea = (LocatorDao.getTareasDao()).getTareaEjecucion(id);
		Proyectom proyecto = (LocatorDao.getProyectoDao()).getproyecto(tarea.getProyecto_id());
		ProyectoEjecucion proyectoE = (LocatorDao.getProyectoDao()).getProyectoEjecucion(tarea.getProyecto_id());
		Paisesm pais = (LocatorDao.getPaisesDao()).getbasespaises(Integer.parseInt(proyecto.getId_paises()));
		System.out.println("Estado ID:" + tarea.getEstadosId());
		Estado estado = (LocatorDao.getTareasDao()).getEstadoEjecucion(tarea.getEstadosId());
		Usuariom usuario = (LocatorDao.getusuariodao()).getUsuario(tarea.getIdresponsable());
		req.setAttribute("tarea", tarea);
		req.setAttribute("proyecto", proyecto);
		req.setAttribute("pais", pais);
		req.setAttribute("estado", estado);
		req.setAttribute("responsable", usuario);
		req.setAttribute("proyectoE", proyectoE);
	}
	
	@POST
	@Path("/bitacora")
	@Produces({ MediaType.TEXT_HTML })
	public Response getbitacora(@Context HttpServletRequest req, @FormParam(value = "idTarea") String idTarea) {

		HttpSession session = req.getSession(true);

		Map<String, Object> map = new HashMap<String, Object>();

		Object user = session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);

			return Response.ok(new Viewable("/views/index", map)).build();

		} else {	
			try{
				req.setAttribute("idTarea", idTarea);
				this.cargarDatosTarea(session, idTarea, req);
			}catch(Exception e){
				e.printStackTrace();
				log.error("Error al cargar tarea para asginar responsable", e);
			}
			return Response.ok(new Viewable("/views/bitacora")).build();
		}

	}
	@GET
	@Path("/ejecucion")
	@Produces({ MediaType.TEXT_HTML })
	public Response getejecucion(@Context HttpServletRequest req) {

		HttpSession session = req.getSession(true);

		Map<String, Object> map = new HashMap<String, Object>();

		Usuariom user = (Usuariom)session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);

			return Response.ok(new Viewable("/views/index", map)).build();

		} else {	

			return Response.ok(new Viewable("/views/ejecutar")).build();
		}

	}
	
}
=======
package cl.signosti.kantar.consistencia;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.log4j.Logger;

import com.sun.jersey.api.view.Viewable;

import cl.signosti.kantar.consistencia.dao.locator.LocatorDao;
import cl.signosti.kantar.consistencia.dwr.KantarDWR;
import cl.signosti.kantar.consistencia.modelo.Estado;
import cl.signosti.kantar.consistencia.modelo.Paisesm;
import cl.signosti.kantar.consistencia.modelo.ProyectoEjecucion;
import cl.signosti.kantar.consistencia.modelo.Proyectom;
import cl.signosti.kantar.consistencia.modelo.Tareasm;
import cl.signosti.kantar.consistencia.modelo.Usuariom;

@Path("/Ejecutar_proyecto")
public class Ejecutar_proyecto {
	
	private static final Logger log = Logger.getLogger(Ejecutar_proyecto.class);
	
	@GET
	@Produces({ MediaType.TEXT_HTML })
	public Response getgest_proyec(@Context HttpServletRequest req) {

		HttpSession session = req.getSession(true);

		Map<String, Object> map = new HashMap<String, Object>();

		Object user = session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);

			return Response.ok(new Viewable("/views/index", map)).build();

		} else {	

			return Response.ok(new Viewable("/views/act_tarea")).build();
		}
	}
	@POST
	@Path("/asig_resp")
	@Produces({ MediaType.TEXT_HTML })
	public Response getasignarresponable(@Context HttpServletRequest req, @FormParam(value = "idTarea") String idTarea) {
		HttpSession session = req.getSession(true);
		Map<String, Object> map = new HashMap<String, Object>();
		Usuariom user = (Usuariom)session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);
			return Response.ok(new Viewable("/views/index", map)).build();
		} else {
			try{
				req.setAttribute("idTarea", idTarea);
				this.cargarDatosTarea(session, idTarea, req);
				req.setAttribute("usuario", user);
			}catch(Exception e){
				e.printStackTrace();
				log.error("Error al cargar tarea para asginar responsable", e);
			}
			return Response.ok(new Viewable("/views/asignar_responsable")).build();
		}
	}
	
	private void cargarDatosTarea(HttpSession session, String idTarea, HttpServletRequest req) throws SQLException{
		log.debug("idTarea : " + idTarea);
		System.out.println("idTarea : " + idTarea);
		session.removeAttribute("tarea");
		//String idTarea = req.getParameter("idTarea");
		int id = Integer.parseInt(idTarea);
		Tareasm tarea = (LocatorDao.getTareasDao()).getTareaEjecucion(id);
		Proyectom proyecto = (LocatorDao.getProyectoDao()).getproyecto(tarea.getProyecto_id());
		ProyectoEjecucion proyectoE = (LocatorDao.getProyectoDao()).getProyectoEjecucion(tarea.getProyecto_id());
		Paisesm pais = (LocatorDao.getPaisesDao()).getbasespaises(Integer.parseInt(proyecto.getId_paises()));
		System.out.println("Estado ID:" + tarea.getEstadosId());
		Estado estado = (LocatorDao.getTareasDao()).getEstadoEjecucion(tarea.getEstadosId());
		Usuariom usuario = (LocatorDao.getusuariodao()).getUsuario(tarea.getIdresponsable());
		req.setAttribute("tarea", tarea);
		req.setAttribute("proyecto", proyecto);
		req.setAttribute("pais", pais);
		req.setAttribute("estado", estado);
		req.setAttribute("responsable", usuario);
		req.setAttribute("proyectoE", proyectoE);
	}
	
	@POST
	@Path("/bitacora")
	@Produces({ MediaType.TEXT_HTML })
	public Response getbitacora(@Context HttpServletRequest req, @FormParam(value = "idTarea") String idTarea) {

		HttpSession session = req.getSession(true);

		Map<String, Object> map = new HashMap<String, Object>();

		Object user = session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);

			return Response.ok(new Viewable("/views/index", map)).build();

		} else {	
			try{
				req.setAttribute("idTarea", idTarea);
				this.cargarDatosTarea(session, idTarea, req);
			}catch(Exception e){
				e.printStackTrace();
				log.error("Error al cargar tarea para asginar responsable", e);
			}
			return Response.ok(new Viewable("/views/bitacora")).build();
		}

	}
	@GET
	@Path("/ejecucion")
	@Produces({ MediaType.TEXT_HTML })
	public Response getejecucion(@Context HttpServletRequest req) {

		HttpSession session = req.getSession(true);

		Map<String, Object> map = new HashMap<String, Object>();

		Usuariom user = (Usuariom)session.getAttribute("user");
		if (user == null) {
			map.put("cod", 1);

			return Response.ok(new Viewable("/views/index", map)).build();

		} else {	

			return Response.ok(new Viewable("/views/ejecutar")).build();
		}

	}
	
}
>>>>>>> graficos
